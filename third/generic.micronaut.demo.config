# Micronaut API 导出配置

# generic.class.has.api
generic.class.has.api=@io.micronaut.http.annotation.Controller

# generic.path
generic.path[@io.micronaut.http.annotation.Controller]=@io.micronaut.http.annotation.Controller#value
generic.path[@io.micronaut.http.annotation.Get]=@io.micronaut.http.annotation.Get#value
generic.path[@io.micronaut.http.annotation.Get]=@io.micronaut.http.annotation.Get#uri
generic.path[@io.micronaut.http.annotation.Post]=@io.micronaut.http.annotation.Post#value
generic.path[@io.micronaut.http.annotation.Post]=@io.micronaut.http.annotation.Post#uri
generic.path[@io.micronaut.http.annotation.Put]=@io.micronaut.http.annotation.Put#value
generic.path[@io.micronaut.http.annotation.Put]=@io.micronaut.http.annotation.Put#uri
generic.path[@io.micronaut.http.annotation.Delete]=@io.micronaut.http.annotation.Delete#value
generic.path[@io.micronaut.http.annotation.Delete]=@io.micronaut.http.annotation.Delete#uri
generic.path[@io.micronaut.http.annotation.Patch]=@io.micronaut.http.annotation.Patch#value
generic.path[@io.micronaut.http.annotation.Patch]=@io.micronaut.http.annotation.Patch#uri

# generic.http.method
generic.http.method[@io.micronaut.http.annotation.Controller]=@io.micronaut.http.annotation.Controller#methods
generic.http.method[@io.micronaut.http.annotation.Get]=GET
generic.http.method[@io.micronaut.http.annotation.Post]=POST
generic.http.method[@io.micronaut.http.annotation.Put]=PUT
generic.http.method[@io.micronaut.http.annotation.Delete]=DELETE
generic.http.method[@io.micronaut.http.annotation.Patch]=PATCH

# generic.method.has.api
generic.method.has.api=@io.micronaut.http.annotation.Get
generic.method.has.api=@io.micronaut.http.annotation.Post
generic.method.has.api=@io.micronaut.http.annotation.Put
generic.method.has.api=@io.micronaut.http.annotation.Delete
generic.method.has.api=@io.micronaut.http.annotation.Patch

# generic.param.as.json.body
generic.param.as.json.body=@io.micronaut.http.annotation.Body

# generic.param.as.form.body
# Micronaut 默认没有 ModelAttribute，对复杂表单直接用 @Body
generic.param.as.form.body=@io.micronaut.http.annotation.Body

# generic.param.as.path.var
generic.param.as.path.var=@io.micronaut.http.annotation.PathVariable

# generic.param.path.var
generic.param.path.var=@io.micronaut.http.annotation.PathVariable#value
generic.param.path.var=@io.micronaut.http.annotation.PathVariable#name

# generic.param.as.cookie
generic.param.as.cookie=@io.micronaut.http.annotation.CookieValue

# generic.param.cookie
generic.param.cookie=@io.micronaut.http.annotation.CookieValue#value
generic.param.cookie=@io.micronaut.http.annotation.CookieValue#name
generic.param.cookie.value=@io.micronaut.http.annotation.CookieValue#defaultValue

# generic.param.name
generic.param.name=@io.micronaut.http.annotation.QueryValue#value
generic.param.name=@io.micronaut.http.annotation.QueryValue#name

# generic.param.header
generic.param.header[@io.micronaut.http.annotation.Header]=groovy:```
def headerAnn = it.annMap("io.micronaut.http.annotation.Header")
def header = [:]
if(headerAnn.containsKey("name")){
    header["name"] = headerAnn["name"]
}
if(headerAnn.containsKey("value")){
    header["name"] = headerAnn["value"]
}
if(headerAnn.containsKey("defaultValue")){
    header["demo"] = headerAnn["defaultValue"]
}
if(headerAnn.containsKey("required")){
    header["required"] = headerAnn["required"]
}
return tool.toJson(header)